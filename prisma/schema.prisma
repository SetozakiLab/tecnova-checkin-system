// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  username       String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  role           Role     @default(SUPER)

  @@map("users")
}

enum Role {
  SUPER
  MANAGER
}

model Guest {
  id        String          @id @default(uuid())
  displayId Int             @unique // アプリケーションロジックで生成
  name      String
  contact   String?
  grade     Grade?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  checkins  CheckinRecord[]

  @@map("guests")
}

model CheckinRecord {
  id         String    @id @default(uuid())
  guestId    String
  checkinAt  DateTime
  checkoutAt DateTime?
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  guest      Guest     @relation(fields: [guestId], references: [id], onDelete: Cascade)

  @@map("checkin_records")
}

enum Grade {
  ES1
  ES2
  ES3
  ES4
  ES5
  ES6
  JH1
  JH2
  JH3
  HS1
  HS2
  HS3
}
